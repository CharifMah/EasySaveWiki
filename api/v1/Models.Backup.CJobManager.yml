### YamlMime:ManagedReference
items:
- uid: Models.Backup.CJobManager
  commentId: T:Models.Backup.CJobManager
  id: CJobManager
  parent: Models.Backup
  children:
  - Models.Backup.CJobManager.#ctor
  - Models.Backup.CJobManager.CreateBackupJob(Models.Backup.CJob)
  - Models.Backup.CJobManager.DeleteJobs(System.Collections.Generic.List{Models.Backup.CJob})
  - Models.Backup.CJobManager.Jobs
  - Models.Backup.CJobManager.Name
  - Models.Backup.CJobManager.RunJobs(System.Collections.Generic.List{Models.Backup.CJob})
  - Models.Backup.CJobManager.SauveCollection
  - Models.Backup.CJobManager.SaveJobs
  langs:
  - csharp
  - vb
  name: CJobManager
  nameWithType: CJobManager
  fullName: Models.Backup.CJobManager
  type: Class
  source:
    remote:
      path: EasySave-2.0/EasySave-1.0/Models/Backup/CJobManager.cs
      branch: develop-livrable-2
      repo: https://faikmehmeti@dev.azure.com/faikmehmeti/G4-FISA-24/_git/G4-FISA-24
    id: CJobManager
    path: ../G4-FISA-24/EasySave-2.0/EasySave-1.0/Models/Backup/CJobManager.cs
    startLine: 7
  assemblies:
  - Models
  namespace: Models.Backup
  summary: Gestionnaire de jobs
  example: []
  syntax:
    content: >-
      [DataContract]

      public class CJobManager
    content.vb: >-
      <DataContract>

      Public Class CJobManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
- uid: Models.Backup.CJobManager.Jobs
  commentId: P:Models.Backup.CJobManager.Jobs
  id: Jobs
  parent: Models.Backup.CJobManager
  langs:
  - csharp
  - vb
  name: Jobs
  nameWithType: CJobManager.Jobs
  fullName: Models.Backup.CJobManager.Jobs
  type: Property
  source:
    remote:
      path: EasySave-2.0/EasySave-1.0/Models/Backup/CJobManager.cs
      branch: develop-livrable-2
      repo: https://faikmehmeti@dev.azure.com/faikmehmeti/G4-FISA-24/_git/G4-FISA-24
    id: Jobs
    path: ../G4-FISA-24/EasySave-2.0/EasySave-1.0/Models/Backup/CJobManager.cs
    startLine: 26
  assemblies:
  - Models
  namespace: Models.Backup
  summary: Liste des jobs gérés
  example: []
  syntax:
    content: public List<CJob> Jobs { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Models.Backup.CJob}
    content.vb: Public ReadOnly Property Jobs As List(Of CJob)
  overload: Models.Backup.CJobManager.Jobs*
- uid: Models.Backup.CJobManager.Name
  commentId: P:Models.Backup.CJobManager.Name
  id: Name
  parent: Models.Backup.CJobManager
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: CJobManager.Name
  fullName: Models.Backup.CJobManager.Name
  type: Property
  source:
    remote:
      path: EasySave-2.0/EasySave-1.0/Models/Backup/CJobManager.cs
      branch: develop-livrable-2
      repo: https://faikmehmeti@dev.azure.com/faikmehmeti/G4-FISA-24/_git/G4-FISA-24
    id: Name
    path: ../G4-FISA-24/EasySave-2.0/EasySave-1.0/Models/Backup/CJobManager.cs
    startLine: 31
  assemblies:
  - Models
  namespace: Models.Backup
  summary: Nom du gestionnaire
  example: []
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Models.Backup.CJobManager.Name*
- uid: Models.Backup.CJobManager.SauveCollection
  commentId: P:Models.Backup.CJobManager.SauveCollection
  id: SauveCollection
  parent: Models.Backup.CJobManager
  langs:
  - csharp
  - vb
  name: SauveCollection
  nameWithType: CJobManager.SauveCollection
  fullName: Models.Backup.CJobManager.SauveCollection
  type: Property
  source:
    remote:
      path: EasySave-2.0/EasySave-1.0/Models/Backup/CJobManager.cs
      branch: develop-livrable-2
      repo: https://faikmehmeti@dev.azure.com/faikmehmeti/G4-FISA-24/_git/G4-FISA-24
    id: SauveCollection
    path: ../G4-FISA-24/EasySave-2.0/EasySave-1.0/Models/Backup/CJobManager.cs
    startLine: 36
  assemblies:
  - Models
  namespace: Models.Backup
  summary: Interface de sauvegarde des données
  example: []
  syntax:
    content: public ISauve SauveCollection { get; set; }
    parameters: []
    return:
      type: Stockage.Save.ISauve
    content.vb: Public Property SauveCollection As ISauve
  overload: Models.Backup.CJobManager.SauveCollection*
- uid: Models.Backup.CJobManager.#ctor
  commentId: M:Models.Backup.CJobManager.#ctor
  id: '#ctor'
  parent: Models.Backup.CJobManager
  langs:
  - csharp
  - vb
  name: CJobManager()
  nameWithType: CJobManager.CJobManager()
  fullName: Models.Backup.CJobManager.CJobManager()
  type: Constructor
  source:
    remote:
      path: EasySave-2.0/EasySave-1.0/Models/Backup/CJobManager.cs
      branch: develop-livrable-2
      repo: https://faikmehmeti@dev.azure.com/faikmehmeti/G4-FISA-24/_git/G4-FISA-24
    id: .ctor
    path: ../G4-FISA-24/EasySave-2.0/EasySave-1.0/Models/Backup/CJobManager.cs
    startLine: 44
  assemblies:
  - Models
  namespace: Models.Backup
  summary: Contructeur de CJobManager initialise le chemin de sauvegarde
  example: []
  syntax:
    content: public CJobManager()
    content.vb: Public Sub New()
  overload: Models.Backup.CJobManager.#ctor*
  nameWithType.vb: CJobManager.New()
  fullName.vb: Models.Backup.CJobManager.New()
  name.vb: New()
- uid: Models.Backup.CJobManager.CreateBackupJob(Models.Backup.CJob)
  commentId: M:Models.Backup.CJobManager.CreateBackupJob(Models.Backup.CJob)
  id: CreateBackupJob(Models.Backup.CJob)
  parent: Models.Backup.CJobManager
  langs:
  - csharp
  - vb
  name: CreateBackupJob(CJob)
  nameWithType: CJobManager.CreateBackupJob(CJob)
  fullName: Models.Backup.CJobManager.CreateBackupJob(Models.Backup.CJob)
  type: Method
  source:
    remote:
      path: EasySave-2.0/EasySave-1.0/Models/Backup/CJobManager.cs
      branch: develop-livrable-2
      repo: https://faikmehmeti@dev.azure.com/faikmehmeti/G4-FISA-24/_git/G4-FISA-24
    id: CreateBackupJob
    path: ../G4-FISA-24/EasySave-2.0/EasySave-1.0/Models/Backup/CJobManager.cs
    startLine: 67
  assemblies:
  - Models
  namespace: Models.Backup
  summary: Crée un nouveau job de sauvegarde
  remarks: Created by Mehmeti Faik on 06/02/2024 Updated validation logic to handle null parameters
  example: []
  syntax:
    content: public bool CreateBackupJob(CJob lJob)
    parameters:
    - id: lJob
      type: Models.Backup.CJob
      description: Objet représentant le job de sauvegarde à créer
    return:
      type: System.Boolean
      description: True si le job a été créé avec succès, false sinon
    content.vb: Public Function CreateBackupJob(lJob As CJob) As Boolean
  overload: Models.Backup.CJobManager.CreateBackupJob*
- uid: Models.Backup.CJobManager.DeleteJobs(System.Collections.Generic.List{Models.Backup.CJob})
  commentId: M:Models.Backup.CJobManager.DeleteJobs(System.Collections.Generic.List{Models.Backup.CJob})
  id: DeleteJobs(System.Collections.Generic.List{Models.Backup.CJob})
  parent: Models.Backup.CJobManager
  langs:
  - csharp
  - vb
  name: DeleteJobs(List<CJob>)
  nameWithType: CJobManager.DeleteJobs(List<CJob>)
  fullName: Models.Backup.CJobManager.DeleteJobs(System.Collections.Generic.List<Models.Backup.CJob>)
  type: Method
  source:
    remote:
      path: EasySave-2.0/EasySave-1.0/Models/Backup/CJobManager.cs
      branch: develop-livrable-2
      repo: https://faikmehmeti@dev.azure.com/faikmehmeti/G4-FISA-24/_git/G4-FISA-24
    id: DeleteJobs
    path: ../G4-FISA-24/EasySave-2.0/EasySave-1.0/Models/Backup/CJobManager.cs
    startLine: 84
  assemblies:
  - Models
  namespace: Models.Backup
  summary: Supprimé un job
  remarks: Mehmeti faik
  example: []
  syntax:
    content: public bool DeleteJobs(List<CJob> pJobs)
    parameters:
    - id: pJobs
      type: System.Collections.Generic.List{Models.Backup.CJob}
      description: List de jobs à supprimer
    return:
      type: System.Boolean
      description: true si réussi
    content.vb: Public Function DeleteJobs(pJobs As List(Of CJob)) As Boolean
  overload: Models.Backup.CJobManager.DeleteJobs*
  nameWithType.vb: CJobManager.DeleteJobs(List(Of CJob))
  fullName.vb: Models.Backup.CJobManager.DeleteJobs(System.Collections.Generic.List(Of Models.Backup.CJob))
  name.vb: DeleteJobs(List(Of CJob))
- uid: Models.Backup.CJobManager.RunJobs(System.Collections.Generic.List{Models.Backup.CJob})
  commentId: M:Models.Backup.CJobManager.RunJobs(System.Collections.Generic.List{Models.Backup.CJob})
  id: RunJobs(System.Collections.Generic.List{Models.Backup.CJob})
  parent: Models.Backup.CJobManager
  langs:
  - csharp
  - vb
  name: RunJobs(List<CJob>)
  nameWithType: CJobManager.RunJobs(List<CJob>)
  fullName: Models.Backup.CJobManager.RunJobs(System.Collections.Generic.List<Models.Backup.CJob>)
  type: Method
  source:
    remote:
      path: EasySave-2.0/EasySave-1.0/Models/Backup/CJobManager.cs
      branch: develop-livrable-2
      repo: https://faikmehmeti@dev.azure.com/faikmehmeti/G4-FISA-24/_git/G4-FISA-24
    id: RunJobs
    path: ../G4-FISA-24/EasySave-2.0/EasySave-1.0/Models/Backup/CJobManager.cs
    startLine: 100
  assemblies:
  - Models
  namespace: Models.Backup
  summary: Lance l'exécution de la liste de jobs passée en paramètre
  example: []
  syntax:
    content: public List<CJob> RunJobs(List<CJob> pJobs)
    parameters:
    - id: pJobs
      type: System.Collections.Generic.List{Models.Backup.CJob}
      description: Liste des jobs à exécuter
    return:
      type: System.Collections.Generic.List{Models.Backup.CJob}
      description: La liste des jobs, mise à jour avec leur état après exécution
    content.vb: Public Function RunJobs(pJobs As List(Of CJob)) As List(Of CJob)
  overload: Models.Backup.CJobManager.RunJobs*
  nameWithType.vb: CJobManager.RunJobs(List(Of CJob))
  fullName.vb: Models.Backup.CJobManager.RunJobs(System.Collections.Generic.List(Of Models.Backup.CJob))
  name.vb: RunJobs(List(Of CJob))
- uid: Models.Backup.CJobManager.SaveJobs
  commentId: M:Models.Backup.CJobManager.SaveJobs
  id: SaveJobs
  parent: Models.Backup.CJobManager
  langs:
  - csharp
  - vb
  name: SaveJobs()
  nameWithType: CJobManager.SaveJobs()
  fullName: Models.Backup.CJobManager.SaveJobs()
  type: Method
  source:
    remote:
      path: EasySave-2.0/EasySave-1.0/Models/Backup/CJobManager.cs
      branch: develop-livrable-2
      repo: https://faikmehmeti@dev.azure.com/faikmehmeti/G4-FISA-24/_git/G4-FISA-24
    id: SaveJobs
    path: ../G4-FISA-24/EasySave-2.0/EasySave-1.0/Models/Backup/CJobManager.cs
    startLine: 115
  assemblies:
  - Models
  namespace: Models.Backup
  summary: Sauvegarde le JobManager
  example: []
  syntax:
    content: public void SaveJobs()
    content.vb: Public Sub SaveJobs()
  overload: Models.Backup.CJobManager.SaveJobs*
references:
- uid: Models.Backup
  commentId: N:Models.Backup
  href: Models.html
  name: Models.Backup
  nameWithType: Models.Backup
  fullName: Models.Backup
  spec.csharp:
  - uid: Models
    name: Models
    href: Models.html
  - name: .
  - uid: Models.Backup
    name: Backup
    href: Models.Backup.html
  spec.vb:
  - uid: Models
    name: Models
    href: Models.html
  - name: .
  - uid: Models.Backup
    name: Backup
    href: Models.Backup.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Models.Backup.CJobManager.Jobs*
  commentId: Overload:Models.Backup.CJobManager.Jobs
  href: Models.Backup.CJobManager.html#Models_Backup_CJobManager_Jobs
  name: Jobs
  nameWithType: CJobManager.Jobs
  fullName: Models.Backup.CJobManager.Jobs
- uid: System.Collections.Generic.List{Models.Backup.CJob}
  commentId: T:System.Collections.Generic.List{Models.Backup.CJob}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<CJob>
  nameWithType: List<CJob>
  fullName: System.Collections.Generic.List<Models.Backup.CJob>
  nameWithType.vb: List(Of CJob)
  fullName.vb: System.Collections.Generic.List(Of Models.Backup.CJob)
  name.vb: List(Of CJob)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Models.Backup.CJob
    name: CJob
    href: Models.Backup.CJob.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Models.Backup.CJob
    name: CJob
    href: Models.Backup.CJob.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Models.Backup.CJobManager.Name*
  commentId: Overload:Models.Backup.CJobManager.Name
  href: Models.Backup.CJobManager.html#Models_Backup_CJobManager_Name
  name: Name
  nameWithType: CJobManager.Name
  fullName: Models.Backup.CJobManager.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Models.Backup.CJobManager.SauveCollection*
  commentId: Overload:Models.Backup.CJobManager.SauveCollection
  href: Models.Backup.CJobManager.html#Models_Backup_CJobManager_SauveCollection
  name: SauveCollection
  nameWithType: CJobManager.SauveCollection
  fullName: Models.Backup.CJobManager.SauveCollection
- uid: Stockage.Save.ISauve
  commentId: T:Stockage.Save.ISauve
  parent: Stockage.Save
  href: Stockage.Save.ISauve.html
  name: ISauve
  nameWithType: ISauve
  fullName: Stockage.Save.ISauve
- uid: Stockage.Save
  commentId: N:Stockage.Save
  href: Stockage.html
  name: Stockage.Save
  nameWithType: Stockage.Save
  fullName: Stockage.Save
  spec.csharp:
  - uid: Stockage
    name: Stockage
    href: Stockage.html
  - name: .
  - uid: Stockage.Save
    name: Save
    href: Stockage.Save.html
  spec.vb:
  - uid: Stockage
    name: Stockage
    href: Stockage.html
  - name: .
  - uid: Stockage.Save
    name: Save
    href: Stockage.Save.html
- uid: Models.Backup.CJobManager.#ctor*
  commentId: Overload:Models.Backup.CJobManager.#ctor
  href: Models.Backup.CJobManager.html#Models_Backup_CJobManager__ctor
  name: CJobManager
  nameWithType: CJobManager.CJobManager
  fullName: Models.Backup.CJobManager.CJobManager
  nameWithType.vb: CJobManager.New
  fullName.vb: Models.Backup.CJobManager.New
  name.vb: New
- uid: Models.Backup.CJobManager.CreateBackupJob*
  commentId: Overload:Models.Backup.CJobManager.CreateBackupJob
  href: Models.Backup.CJobManager.html#Models_Backup_CJobManager_CreateBackupJob_Models_Backup_CJob_
  name: CreateBackupJob
  nameWithType: CJobManager.CreateBackupJob
  fullName: Models.Backup.CJobManager.CreateBackupJob
- uid: Models.Backup.CJob
  commentId: T:Models.Backup.CJob
  parent: Models.Backup
  href: Models.Backup.CJob.html
  name: CJob
  nameWithType: CJob
  fullName: Models.Backup.CJob
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Models.Backup.CJobManager.DeleteJobs*
  commentId: Overload:Models.Backup.CJobManager.DeleteJobs
  href: Models.Backup.CJobManager.html#Models_Backup_CJobManager_DeleteJobs_System_Collections_Generic_List_Models_Backup_CJob__
  name: DeleteJobs
  nameWithType: CJobManager.DeleteJobs
  fullName: Models.Backup.CJobManager.DeleteJobs
- uid: Models.Backup.CJobManager.RunJobs*
  commentId: Overload:Models.Backup.CJobManager.RunJobs
  href: Models.Backup.CJobManager.html#Models_Backup_CJobManager_RunJobs_System_Collections_Generic_List_Models_Backup_CJob__
  name: RunJobs
  nameWithType: CJobManager.RunJobs
  fullName: Models.Backup.CJobManager.RunJobs
- uid: Models.Backup.CJobManager.SaveJobs*
  commentId: Overload:Models.Backup.CJobManager.SaveJobs
  href: Models.Backup.CJobManager.html#Models_Backup_CJobManager_SaveJobs
  name: SaveJobs
  nameWithType: CJobManager.SaveJobs
  fullName: Models.Backup.CJobManager.SaveJobs
