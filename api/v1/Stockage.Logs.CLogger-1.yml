### YamlMime:ManagedReference
items:
- uid: Stockage.Logs.CLogger`1
  commentId: T:Stockage.Logs.CLogger`1
  id: CLogger`1
  parent: Stockage.Logs
  children:
  - Stockage.Logs.CLogger`1.Clear
  - Stockage.Logs.CLogger`1.GenericLogger
  - Stockage.Logs.CLogger`1.Instance
  - Stockage.Logs.CLogger`1.StringLogger
  langs:
  - csharp
  - vb
  name: CLogger<T>
  nameWithType: CLogger<T>
  fullName: Stockage.Logs.CLogger<T>
  type: Class
  source:
    remote:
      path: EasySave-2.0/EasySave-1.0/Stockage/Logs/CLogger.cs
      branch: develop-livrable-2
      repo: https://faikmehmeti@dev.azure.com/faikmehmeti/G4-FISA-24/_git/G4-FISA-24
    id: CLogger
    path: ../G4-FISA-24/EasySave-2.0/EasySave-1.0/Stockage/Logs/CLogger.cs
    startLine: 6
  assemblies:
  - Stockage
  namespace: Stockage.Logs
  summary: Classe Logger permettant de Logger des objet et des string dans un fichier
  example: []
  syntax:
    content: public class CLogger<T>
    typeParameters:
    - id: T
      description: ''
    content.vb: Public Class CLogger(Of T)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: CLogger(Of T)
  fullName.vb: Stockage.Logs.CLogger(Of T)
  name.vb: CLogger(Of T)
- uid: Stockage.Logs.CLogger`1.GenericLogger
  commentId: P:Stockage.Logs.CLogger`1.GenericLogger
  id: GenericLogger
  parent: Stockage.Logs.CLogger`1
  langs:
  - csharp
  - vb
  name: GenericLogger
  nameWithType: CLogger<T>.GenericLogger
  fullName: Stockage.Logs.CLogger<T>.GenericLogger
  type: Property
  source:
    remote:
      path: EasySave-2.0/EasySave-1.0/Stockage/Logs/CLogger.cs
      branch: develop-livrable-2
      repo: https://faikmehmeti@dev.azure.com/faikmehmeti/G4-FISA-24/_git/G4-FISA-24
    id: GenericLogger
    path: ../G4-FISA-24/EasySave-2.0/EasySave-1.0/Stockage/Logs/CLogger.cs
    startLine: 14
  assemblies:
  - Stockage
  namespace: Stockage.Logs
  summary: Logger generic
  example: []
  syntax:
    content: public CGenericLogger<T> GenericLogger { get; }
    parameters: []
    return:
      type: Stockage.Logs.CGenericLogger{{T}}
    content.vb: Public ReadOnly Property GenericLogger As CGenericLogger(Of T)
  overload: Stockage.Logs.CLogger`1.GenericLogger*
  nameWithType.vb: CLogger(Of T).GenericLogger
  fullName.vb: Stockage.Logs.CLogger(Of T).GenericLogger
- uid: Stockage.Logs.CLogger`1.StringLogger
  commentId: P:Stockage.Logs.CLogger`1.StringLogger
  id: StringLogger
  parent: Stockage.Logs.CLogger`1
  langs:
  - csharp
  - vb
  name: StringLogger
  nameWithType: CLogger<T>.StringLogger
  fullName: Stockage.Logs.CLogger<T>.StringLogger
  type: Property
  source:
    remote:
      path: EasySave-2.0/EasySave-1.0/Stockage/Logs/CLogger.cs
      branch: develop-livrable-2
      repo: https://faikmehmeti@dev.azure.com/faikmehmeti/G4-FISA-24/_git/G4-FISA-24
    id: StringLogger
    path: ../G4-FISA-24/EasySave-2.0/EasySave-1.0/Stockage/Logs/CLogger.cs
    startLine: 18
  assemblies:
  - Stockage
  namespace: Stockage.Logs
  summary: Logger de string
  example: []
  syntax:
    content: public CStringLogger StringLogger { get; }
    parameters: []
    return:
      type: Stockage.Logs.CStringLogger
    content.vb: Public ReadOnly Property StringLogger As CStringLogger
  overload: Stockage.Logs.CLogger`1.StringLogger*
  nameWithType.vb: CLogger(Of T).StringLogger
  fullName.vb: Stockage.Logs.CLogger(Of T).StringLogger
- uid: Stockage.Logs.CLogger`1.Instance
  commentId: P:Stockage.Logs.CLogger`1.Instance
  id: Instance
  parent: Stockage.Logs.CLogger`1
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: CLogger<T>.Instance
  fullName: Stockage.Logs.CLogger<T>.Instance
  type: Property
  source:
    remote:
      path: EasySave-2.0/EasySave-1.0/Stockage/Logs/CLogger.cs
      branch: develop-livrable-2
      repo: https://faikmehmeti@dev.azure.com/faikmehmeti/G4-FISA-24/_git/G4-FISA-24
    id: Instance
    path: ../G4-FISA-24/EasySave-2.0/EasySave-1.0/Stockage/Logs/CLogger.cs
    startLine: 23
  assemblies:
  - Stockage
  namespace: Stockage.Logs
  syntax:
    content: public static CLogger<T> Instance { get; }
    parameters: []
    return:
      type: Stockage.Logs.CLogger`1
    content.vb: Public Shared ReadOnly Property Instance As CLogger(Of T)
  overload: Stockage.Logs.CLogger`1.Instance*
  nameWithType.vb: CLogger(Of T).Instance
  fullName.vb: Stockage.Logs.CLogger(Of T).Instance
- uid: Stockage.Logs.CLogger`1.Clear
  commentId: M:Stockage.Logs.CLogger`1.Clear
  id: Clear
  parent: Stockage.Logs.CLogger`1
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: CLogger<T>.Clear()
  fullName: Stockage.Logs.CLogger<T>.Clear()
  type: Method
  source:
    remote:
      path: EasySave-2.0/EasySave-1.0/Stockage/Logs/CLogger.cs
      branch: develop-livrable-2
      repo: https://faikmehmeti@dev.azure.com/faikmehmeti/G4-FISA-24/_git/G4-FISA-24
    id: Clear
    path: ../G4-FISA-24/EasySave-2.0/EasySave-1.0/Stockage/Logs/CLogger.cs
    startLine: 49
  assemblies:
  - Stockage
  namespace: Stockage.Logs
  summary: Vide les Liste de logs
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear()
  overload: Stockage.Logs.CLogger`1.Clear*
  nameWithType.vb: CLogger(Of T).Clear()
  fullName.vb: Stockage.Logs.CLogger(Of T).Clear()
references:
- uid: Stockage.Logs
  commentId: N:Stockage.Logs
  href: Stockage.html
  name: Stockage.Logs
  nameWithType: Stockage.Logs
  fullName: Stockage.Logs
  spec.csharp:
  - uid: Stockage
    name: Stockage
    href: Stockage.html
  - name: .
  - uid: Stockage.Logs
    name: Logs
    href: Stockage.Logs.html
  spec.vb:
  - uid: Stockage
    name: Stockage
    href: Stockage.html
  - name: .
  - uid: Stockage.Logs
    name: Logs
    href: Stockage.Logs.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Stockage.Logs.CLogger`1.GenericLogger*
  commentId: Overload:Stockage.Logs.CLogger`1.GenericLogger
  href: Stockage.Logs.CLogger-1.html#Stockage_Logs_CLogger_1_GenericLogger
  name: GenericLogger
  nameWithType: CLogger<T>.GenericLogger
  fullName: Stockage.Logs.CLogger<T>.GenericLogger
  nameWithType.vb: CLogger(Of T).GenericLogger
  fullName.vb: Stockage.Logs.CLogger(Of T).GenericLogger
- uid: Stockage.Logs.CGenericLogger{{T}}
  commentId: T:Stockage.Logs.CGenericLogger{`0}
  parent: Stockage.Logs
  definition: Stockage.Logs.CGenericLogger`1
  href: Stockage.Logs.CGenericLogger-1.html
  name: CGenericLogger<T>
  nameWithType: CGenericLogger<T>
  fullName: Stockage.Logs.CGenericLogger<T>
  nameWithType.vb: CGenericLogger(Of T)
  fullName.vb: Stockage.Logs.CGenericLogger(Of T)
  name.vb: CGenericLogger(Of T)
  spec.csharp:
  - uid: Stockage.Logs.CGenericLogger`1
    name: CGenericLogger
    href: Stockage.Logs.CGenericLogger-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Stockage.Logs.CGenericLogger`1
    name: CGenericLogger
    href: Stockage.Logs.CGenericLogger-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Stockage.Logs.CGenericLogger`1
  commentId: T:Stockage.Logs.CGenericLogger`1
  href: Stockage.Logs.CGenericLogger-1.html
  name: CGenericLogger<T>
  nameWithType: CGenericLogger<T>
  fullName: Stockage.Logs.CGenericLogger<T>
  nameWithType.vb: CGenericLogger(Of T)
  fullName.vb: Stockage.Logs.CGenericLogger(Of T)
  name.vb: CGenericLogger(Of T)
  spec.csharp:
  - uid: Stockage.Logs.CGenericLogger`1
    name: CGenericLogger
    href: Stockage.Logs.CGenericLogger-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Stockage.Logs.CGenericLogger`1
    name: CGenericLogger
    href: Stockage.Logs.CGenericLogger-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Stockage.Logs.CLogger`1.StringLogger*
  commentId: Overload:Stockage.Logs.CLogger`1.StringLogger
  href: Stockage.Logs.CLogger-1.html#Stockage_Logs_CLogger_1_StringLogger
  name: StringLogger
  nameWithType: CLogger<T>.StringLogger
  fullName: Stockage.Logs.CLogger<T>.StringLogger
  nameWithType.vb: CLogger(Of T).StringLogger
  fullName.vb: Stockage.Logs.CLogger(Of T).StringLogger
- uid: Stockage.Logs.CStringLogger
  commentId: T:Stockage.Logs.CStringLogger
  parent: Stockage.Logs
  href: Stockage.Logs.CStringLogger.html
  name: CStringLogger
  nameWithType: CStringLogger
  fullName: Stockage.Logs.CStringLogger
- uid: Stockage.Logs.CLogger`1.Instance*
  commentId: Overload:Stockage.Logs.CLogger`1.Instance
  href: Stockage.Logs.CLogger-1.html#Stockage_Logs_CLogger_1_Instance
  name: Instance
  nameWithType: CLogger<T>.Instance
  fullName: Stockage.Logs.CLogger<T>.Instance
  nameWithType.vb: CLogger(Of T).Instance
  fullName.vb: Stockage.Logs.CLogger(Of T).Instance
- uid: Stockage.Logs.CLogger`1
  commentId: T:Stockage.Logs.CLogger`1
  parent: Stockage.Logs
  href: Stockage.Logs.CLogger-1.html
  name: CLogger<T>
  nameWithType: CLogger<T>
  fullName: Stockage.Logs.CLogger<T>
  nameWithType.vb: CLogger(Of T)
  fullName.vb: Stockage.Logs.CLogger(Of T)
  name.vb: CLogger(Of T)
  spec.csharp:
  - uid: Stockage.Logs.CLogger`1
    name: CLogger
    href: Stockage.Logs.CLogger-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Stockage.Logs.CLogger`1
    name: CLogger
    href: Stockage.Logs.CLogger-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Stockage.Logs.CLogger`1.Clear*
  commentId: Overload:Stockage.Logs.CLogger`1.Clear
  href: Stockage.Logs.CLogger-1.html#Stockage_Logs_CLogger_1_Clear
  name: Clear
  nameWithType: CLogger<T>.Clear
  fullName: Stockage.Logs.CLogger<T>.Clear
  nameWithType.vb: CLogger(Of T).Clear
  fullName.vb: Stockage.Logs.CLogger(Of T).Clear
